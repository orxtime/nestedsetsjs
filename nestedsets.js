module.exports=function(){var e={Structure:[],Data:{},setItem:(r,t)=>(e.Data[r]=t,e.Data[r]),removeItem:r=>{if(void 0!==e.Data[r]){for(var t=0;t<e.Structure.length;t++)e.Structure[t].itemId===r&&e.removeNode(e.Structure[t]._id);return delete e.Data[r],!0}return!1},addRoot:r=>(void 0!==e.Data[r]&&(e.removeNodes(),e.Structure.push({_id:1,lkey:1,rkey:2,depth:1,childs:0,parentId:0,itemId:r})),e.Structure[0]._id),addNode:(r,t)=>{if(void 0!==e.Data[t]){var y=e.getNode(r,!0);if(!y)return!1;var d=e.Structure.reduce((e,{_id:r})=>e>r?e:r,-1/0);return e.Structure=e.Structure.map(e=>(e.lkey>y.rkey&&(e.lkey+=2,e.rkey+=2),e.rkey>=y.rkey&&e.lkey<y.rkey&&(e.rkey+=2,e.childs++),e)),e.Structure.push({_id:d+1,lkey:y.rkey,rkey:y.rkey+1,depth:y.depth+1,childs:0,parentId:y._id,itemId:t}),d+1}},getNode:(r,t)=>{var y=e.Structure.filter(e=>e._id===r);return!(!Array.isArray(y)||1!==y.length)&&(!0===t?{...y[0]}:y[0])},removeNode:r=>{var t=e.getNode(r,!0),y=e.getChilds(r).length+1;return!!t&&(e.Structure=e.getNodes().map(e=>(e.rkey>t.rkey&&e.lkey<t.lkey&&(e.childs=e.childs-y),e)).filter(e=>!(e.lkey>=t.lkey&&e.rkey<=t.rkey)).map(e=>(e.rkey>t.rkey&&(e.lkey=e.lkey>t.lkey?e.lkey-(t.rkey-t.lkey+1):e.lkey,e.rkey=e.rkey-(t.rkey-t.lkey+1)),e)),e.Structure)},moveNode:(r,t)=>{var y,d=e.getNode(r,!0),k=e.getNode(t,!0),l=d.depth,u=d.rkey,a=d.lkey,i=k.depth,o=k.rkey-1,h=i-l+1,c=u-a+1;o>u?(y=o-a+1-c,e.Structure=e.Structure.map(e=>(e.lkey<=o&&e.rkey>a&&(e.rkey<=u?e.lkey=e.lkey+y:e.lkey>u&&(e.lkey=e.lkey-c),e.rkey<=u&&(e.depth=e.depth+h),e.rkey<=u?e.rkey=e.rkey+y:e.rkey<=o&&(e.rkey=e.rkey-c)),e))):(y=o-a+1,e.Structure=e.Structure.map(e=>(e.rkey>o&&e.lkey<u&&(e.lkey>=a?e.rkey=e.rkey+y:e.rkey<a&&(e.rkey=e.rkey+c),e.lkey>=a&&(e.depth=e.depth+h),e.lkey>=a?e.lkey=e.lkey+y:e.lkey>o&&(e.lkey=e.lkey+c)),e)))},getNodes:()=>e.Structure.sort((e,r)=>e.lkey-r.lkey),removeNodes:()=>{e.Structure=[]},getParent:r=>{var t=e.getParents(r);return void 0!==t[t.length-1]&&t[t.length-1]},getParents:r=>{var t=e.getNode(r,!0);return t?e.getNodes().filter(e=>e.lkey<t.lkey&&e.rkey>t.rkey).map(r=>(r.data=e.Data[r.itemId],r)):[]},getChilds:(r,t)=>{var y=e.getNode(r,!0);return y?e.getNodes().filter(e=>e.lkey>=y.lkey&&e.rkey<=y.rkey&&r!==e._id&&(void 0===t||e.depth<=y.depth+t)).map(r=>(r.data=e.Data[r.itemId],r)):[]},getBranch:r=>{var t=e.getNode(r);return t?e.getNodes().filter(e=>e.rkey>t.lkey&&e.lkey<t.rkey).map(r=>(r.data=e.Data[r.itemId],r)):[]},getTree:()=>e.getNodes().map(r=>(r.data=e.Data[r.itemId],r)),clearAll:()=>{e.Structure=[],e.Data={}},isRoot:r=>{var t=e.getNode(r);return t&&0===t.parentId},isBranch:r=>{var t=e.getNode(r);return t&&t.childs>0},isLeaf:r=>{var t=e.getNode(r);return t&&0===t.childs},getMaxRightKey:()=>e.Structure.reduce((e,{rkey:r})=>e>r?e:r,-1/0),getMaxLeftKey:()=>e.Structure.reduce((e,{lkey:r})=>e>r?e:r,-1/0),getCountNodes:()=>e.Structure.length,checkTree:()=>{var r=e.Structure.filter(e=>e.lkey>=e.rkey),t=e.Structure.filter(e=>(e.rkey-e.lkey)%2==0),y=e.Structure.filter(e=>(e.lkey-e.depth+2)%2==1),d=[];return 0!==r.length&&d.push({LeftLessRight:r}),0!==t.length&&d.push({ModKeys:t}),0!==y.length&&d.push({Depth:y}),d},debug:()=>e.getNodes().map(r=>String(" ").repeat(r.depth+1)+"> "+JSON.stringify(e.Data[r.itemId])+"(itemId:"+r.itemId+"; nodeId:"+r._id+"; lkey:"+r.lkey+"; rkey:"+r.rkey+"; depth:"+r.depth+"; childs:"+r.childs+")")};return e};
